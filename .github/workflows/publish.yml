name: publish
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 14
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            .gradle/loom-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-          
      - uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: 6.4.1
          arguments: build
      - uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
      - name: Extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');
      - name: Generate changelog
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag.outputs.result }}
          release_name: Release ${{ steps.tag.outputs.result }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/libs/herbocraft.jar
          asset_name: jerbocraft-${{ steps.tag.outputs.result }}.jar
          asset_content_type: application/java-archive
      - name: Rename File
        id: rename-file
        run: mv build/libs/herbocraft.jar build/libs/herbocraft-${{ steps.tag.outputs.result }}.jar
      - name: Publish to curseforge
        uses: itsmeow/curseforge-upload@v2
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         project_id: 390001
         game_endpoint: minecraft
         file_path: build/libs/herbocraft-*.jar
         changelog: ${{ steps.changelog.outputs.changelog }}
         changelog_type: text
         game_versions: 1.16
         release_type: alpha
