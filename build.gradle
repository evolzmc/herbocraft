plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    testImplementation 'com.google.code.findbugs:jsr305:3.0.2'
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.4.0-nightly.1.16-pre4"
    // Adds an implementation dependency on the entity module
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.4.0-nightly.1.16-pre4"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:2.4.0-nightly.1.16-pre4"
    modCompile "com.github.vini2003:spinnery:${project.spinnery_version}"
    include "com.github.vini2003:spinnery:${project.spinnery_version}"

    //modRuntime ("com.github.Chocohead:Data-Breaker-Lower:24be1a2")

    /* this will expose the dependency to anyone building against your mod. You might
     want to set this to modImplementation for production */
    //modApi  "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"
    /* this will package cotton-resources in your jar. skip if you don't want this */
    //include "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"


    implementation 'com.google.code.gson:gson:2.8.6'
}
repositories {
    maven {
        name = "Ladysnake Libs"
        url = 'https://dl.bintray.com/ladysnake/libs'
    }
    maven {
        name = "Spinnery"
        url  "https://dl.bintray.com/spinnery/Spinnery"
    }
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release/"
    }
    maven { url = "https://jitpack.io" }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    //noinspection GrDeprecatedAPIUsage
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
